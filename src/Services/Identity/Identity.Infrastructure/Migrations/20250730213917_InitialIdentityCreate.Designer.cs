// <auto-generated />
using System;
using Identity.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Identity.Infrastructure.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20250730213917_InitialIdentityCreate")]
    partial class InitialIdentityCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Identity.Domain.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111112221111"),
                            Email = "eyupcanee@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOo2t9Ptm//TK+heykrn/UKejsSmGtfhAogweyleWyOpwb5HXy/wJuONZfQt2Dis6g=="
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_roles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("11111111-1111-1111-1111-111112221111"),
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("permissions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "permissions:read"
                        },
                        new
                        {
                            Id = 2,
                            Name = "permissions:write"
                        },
                        new
                        {
                            Id = 3,
                            Name = "permissions:update"
                        },
                        new
                        {
                            Id = 4,
                            Name = "permissions:delete"
                        },
                        new
                        {
                            Id = 5,
                            Name = "payment:read"
                        },
                        new
                        {
                            Id = 6,
                            Name = "payment:write"
                        },
                        new
                        {
                            Id = 7,
                            Name = "payment:update"
                        },
                        new
                        {
                            Id = 8,
                            Name = "payment:delete"
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("role_permissions", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 6
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 7
                        },
                        new
                        {
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PermissionId = 8
                        },
                        new
                        {
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222"),
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222"),
                            PermissionId = 5
                        },
                        new
                        {
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222"),
                            PermissionId = 6
                        });
                });

            modelBuilder.Entity("Identity.Domain.Entities.AppUserRole", b =>
                {
                    b.HasOne("Identity.Domain.Entities.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Identity.Domain.Entities.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Identity.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Identity.Domain.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Identity.Domain.Entities.AppRole", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Identity.Domain.Entities.AppRole", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Identity.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
